; Tests the data movement instructions

; Note, we attempt to verify the behavior of the load instructions
; by writing registers out with STS-
; the load tests assume STS is functional.



;PREPROCESS TestLDI
; do a few simple LDIs
LDI r16, $00;
STS $0000, r16;W 00 0000
LDI r17, $FF;
STS $0000, r17;W FF 0000
LDI r18, $0F;
STS $0000, r18;W 0F 0000
; do a fixed LDI into all 16 upper registers
LDI r16, $EC;
LDI r17, $EC;
LDI r18, $EC;
LDI r19, $EC;
LDI r20, $EC;
LDI r21, $EC;
LDI r22, $EC;
LDI r23, $EC;
LDI r24, $EC;
LDI r25, $EC;
LDI r26, $EC;
LDI r27, $EC;
LDI r28, $EC;
LDI r29, $EC;
LDI r30, $EC;
LDI r31, $EC;
STS $0000, r16;W EC 0000
STS $0000, r17;W EC 0000
STS $0000, r18;W EC 0000
STS $0000, r19;W EC 0000
STS $0000, r20;W EC 0000
STS $0000, r21;W EC 0000
STS $0000, r22;W EC 0000
STS $0000, r23;W EC 0000
STS $0000, r24;W EC 0000
STS $0000, r25;W EC 0000
STS $0000, r26;W EC 0000
STS $0000, r27;W EC 0000
STS $0000, r28;W EC 0000
STS $0000, r29;W EC 0000
STS $0000, r30;W EC 0000
STS $0000, r31;W EC 0000
; do some random LDIs
LDI r20, $EA;
LDI r16, $D5;
LDI r23, $E2;
LDI r24, $43;
LDI r25, $A4;
LDI r27, $00;
LDI r22, $7F;
LDI r19, $89;
LDI r18, $1A;
LDI r21, $D3;
STS $0000, r20;W EA 0000
STS $0000, r16;W D5 0000
STS $0000, r23;W E2 0000
STS $0000, r24;W 43 0000
STS $0000, r25;W A4 0000
STS $0000, r27;W 00 0000
STS $0000, r22;W 7F 0000
STS $0000, r19;W 89 0000
STS $0000, r18;W 1A 0000
STS $0000, r21;W D3 0000


;PREPROCESS TestLD

; do a few simple LDs from X register
LDI r27, HIGH($0004); set X register to 0x0004
LDI r26, LOW($0004);
LD r0, X;R EC 0004
STS $0000, r0;W EC 0000
LD r8, X;R EC 0004
STS $0000, r8;W EC 0000
LD r31, X;R EC 0004
STS $0000, r31;W EC 0000
; load with pre decrement through 0x0000
LD r0, -X;R 0C 0003
LD r4, -X;R 61 0002
LD r7, -X;R 62 0001
LD r2, -X;R FA 0000
LD r8, -X;R 05 FFFF
LD r25, -X;R 6C FFFE
LD r30, -X;R B2 FFFD
LD r19, -X;R 7D FFFC
STS $0000, r0;W 0C 0000
STS $0000, r4;W 61 0000
STS $0000, r7;W 62 0000
STS $0000, r2;W FA 0000
STS $0000, r8;W 05 0000
STS $0000, r25;W 6C 0000
STS $0000, r30;W B2 0000
STS $0000, r19;W 7D 0000
; load with post increment through 0xFFFF
LD r31, X+;R 05 FFFC
LD r11, X+;R 91 FFFD
LD r23, X+;R 75 FFFE
LD r24, X+;R 4C FFFF
LD r2, X+;R D4 0000
LD r0, X+;R 79 0001
LD r30, X+;R 23 0002
LD r20, X+;R D9 0003
STS $0000, r31;W 05 0000
STS $0000, r11;W 91 0000
STS $0000, r23;W 75 0000
STS $0000, r24;W 4C 0000
STS $0000, r2;W D4 0000
STS $0000, r0;W 79 0000
STS $0000, r30;W 23 0000
STS $0000, r20;W D9 0000
; do a few simple LDs from Y register
LDI r29, HIGH($0004); set Y register to 0x0004
LDI r28, LOW($0004);
LD r0, Y;R EC 0004
STS $0000, r0;W EC 0000
LD r8, Y;R EC 0004
STS $0000, r8;W EC 0000
LD r31, Y;R EC 0004
STS $0000, r31;W EC 0000
; load with pre decrement through 0x0000
LD r30, -Y;R 8B 0003
LD r2, -Y;R 13 0002
LD r27, -Y;R DB 0001
LD r14, -Y;R 98 0000
LD r12, -Y;R 10 FFFF
LD r16, -Y;R A0 FFFE
LD r23, -Y;R 53 FFFD
LD r25, -Y;R 7B FFFC
STS $0000, r30;W 8B 0000
STS $0000, r2;W 13 0000
STS $0000, r27;W DB 0000
STS $0000, r14;W 98 0000
STS $0000, r12;W 10 0000
STS $0000, r16;W A0 0000
STS $0000, r23;W 53 0000
STS $0000, r25;W 7B 0000
; load with post increment through 0xFFFF
LD r18, Y+;R 67 FFFC
LD r1, Y+;R 6D FFFD
LD r14, Y+;R 72 FFFE
LD r20, Y+;R 39 FFFF
LD r11, Y+;R DF 0000
LD r31, Y+;R 01 0001
LD r23, Y+;R 9A 0002
LD r2, Y+;R 6F 0003
STS $0000, r18;W 67 0000
STS $0000, r1;W 6D 0000
STS $0000, r14;W 72 0000
STS $0000, r20;W 39 0000
STS $0000, r11;W DF 0000
STS $0000, r31;W 01 0000
STS $0000, r23;W 9A 0000
STS $0000, r2;W 6F 0000
; do a few simple LDs from Z register
LDI r31, HIGH($0004); set Z register to 0x0004
LDI r30, LOW($0004);
LD r0, Z;R EC 0004
STS $0000, r0;W EC 0000
LD r8, Z;R EC 0004
STS $0000, r8;W EC 0000
LD r31, Z;R EC 0004
STS $0000, r31;W EC 0000
; load with pre decrement through 0x0000
LD r19, -Z;R 90 0003
LD r6, -Z;R AF 0002
LD r29, -Z;R B6 0001
LD r4, -Z;R 1F 0000
LD r15, -Z;R C1 FFFF
LD r5, -Z;R 6A FFFE
LD r12, -Z;R 5C FFFD
LD r25, -Z;R 1C FFFC
STS $0000, r19;W 90 0000
STS $0000, r6;W AF 0000
STS $0000, r29;W B6 0000
STS $0000, r4;W 1F 0000
STS $0000, r15;W C1 0000
STS $0000, r5;W 6A 0000
STS $0000, r12;W 5C 0000
STS $0000, r25;W 1C 0000
; load with post increment through 0xFFFF
LD r15, Z+;R E4 FFFC
LD r21, Z+;R 2A FFFD
LD r9, Z+;R 0A FFFE
LD r14, Z+;R 87 FFFF
LD r4, Z+;R F1 0000
LD r22, Z+;R 35 0001
LD r24, Z+;R B9 0002
LD r28, Z+;R C5 0003
STS $0000, r15;W E4 0000
STS $0000, r21;W 2A 0000
STS $0000, r9;W 0A 0000
STS $0000, r14;W 87 0000
STS $0000, r4;W F1 0000
STS $0000, r22;W 35 0000
STS $0000, r24;W B9 0000
STS $0000, r28;W C5 0000


;PREPROCESS TestLDD

LDI r29, HIGH($FFE0); set Y register to 0xFFE0
LDI r28, LOW($FFE0);
LDD r19, Y+60;R A4 001C
LDD r19, Y+36;R 87 0004
LDD r5, Y+53;R 96 0015
LDD r15, Y+52;R 3D 0014
LDD r31, Y+27;R 84 FFFB
LDD r17, Y+4;R 35 FFE4
LDD r19, Y+28;R 1C FFFC
LDD r11, Y+51;R DA 0013
STS $0000, r19;W A4 0000
STS $0000, r19;W 87 0000
STS $0000, r5;W 96 0000
STS $0000, r15;W 3D 0000
STS $0000, r31;W 84 0000
STS $0000, r17;W 35 0000
STS $0000, r19;W 1C 0000
STS $0000, r11;W DA 0000
LDI r31, HIGH($FFE0); set Z register to 0xFFE0
LDI r30, LOW($FFE0);
LDD r3, Z+57;R 1B 0019
LDD r8, Z+45;R E9 000D
LDD r20, Z+58;R F7 001A
LDD r27, Z+13;R 1A FFED
LDD r20, Z+8;R DC FFE8
LDD r11, Z+32;R 6A 0000
LDD r3, Z+14;R 6E FFEE
LDD r9, Z+33;R 49 0001
STS $0000, r3;W 1B 0000
STS $0000, r8;W E9 0000
STS $0000, r20;W F7 0000
STS $0000, r27;W 1A 0000
STS $0000, r20;W DC 0000
STS $0000, r11;W 6A 0000
STS $0000, r3;W 6E 0000
STS $0000, r9;W 49 0000


;PREPROCESS TestLDS

; do a few simple LDSs
LDS r0, $0000;R EC 0000
STS $0000, r0;W EC 0000
LDS r15, $FF00;R EC FF00
STS $0000, r15;W EC 0000
LDS r30, $FFFF;R EC FFFF
STS $0000, r30;W EC 0000
; do some random LDSs
LDS r1, $029B;R E6 029B
LDS r28, $0E5A;R D8 0E5A
LDS r14, $52A4;R 3C 52A4
LDS r3, $677D;R BB 677D
LDS r15, $38EC;R 7E 38EC
LDS r19, $CF3F;R 5F CF3F
LDS r23, $DB0D;R 8D DB0D
LDS r27, $970C;R 79 970C
LDS r20, $03A6;R 52 03A6
LDS r26, $979C;R D1 979C
STS $0000, r1;W E6 0000
STS $0000, r28;W D8 0000
STS $0000, r14;W 3C 0000
STS $0000, r3;W BB 0000
STS $0000, r15;W 7E 0000
STS $0000, r19;W 5F 0000
STS $0000, r23;W 8D 0000
STS $0000, r27;W 79 0000
STS $0000, r20;W 52 0000
STS $0000, r26;W D1 0000

;PREPROCESS TestMOV
;PREPROCESS TestST
;PREPROCESS TestSTD
;PREPROCESS TestSTS
;PREPROCESS TestPOP
;PREPROCESS TestPUSH
        NOP;
