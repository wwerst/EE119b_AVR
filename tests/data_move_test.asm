; Tests the data movement instructions

; Note, we attempt to verify the behavior of the load instructions
; by writing registers out with STS-
; the load tests assume STS is functional.



;PREPROCESS TestLDI
; do a few simple LDIs
LDI r16, $00;
STS $0000, r16;W 00 0000
LDI r17, $FF;
STS $0000, r17;W FF 0000
LDI r18, $0F;
STS $0000, r18;W 0F 0000
; do a fixed LDI into all 16 upper registers
LDI r16, $EC;
LDI r17, $EC;
LDI r18, $EC;
LDI r19, $EC;
LDI r20, $EC;
LDI r21, $EC;
LDI r22, $EC;
LDI r23, $EC;
LDI r24, $EC;
LDI r25, $EC;
LDI r26, $EC;
LDI r27, $EC;
LDI r28, $EC;
LDI r29, $EC;
LDI r30, $EC;
LDI r31, $EC;
STS $0000, r16;W EC 0000
STS $0000, r17;W EC 0000
STS $0000, r18;W EC 0000
STS $0000, r19;W EC 0000
STS $0000, r20;W EC 0000
STS $0000, r21;W EC 0000
STS $0000, r22;W EC 0000
STS $0000, r23;W EC 0000
STS $0000, r24;W EC 0000
STS $0000, r25;W EC 0000
STS $0000, r26;W EC 0000
STS $0000, r27;W EC 0000
STS $0000, r28;W EC 0000
STS $0000, r29;W EC 0000
STS $0000, r30;W EC 0000
STS $0000, r31;W EC 0000
; do some random LDIs
LDI r22, $35;
LDI r31, $AE;
LDI r26, $6C;
LDI r19, $9D;
LDI r23, $BF;
LDI r25, $33;
LDI r17, $29;
LDI r18, $DE;
LDI r28, $3E;
LDI r30, $BC;
STS $0000, r22;W 35 0000
STS $0000, r31;W AE 0000
STS $0000, r26;W 6C 0000
STS $0000, r19;W 9D 0000
STS $0000, r23;W BF 0000
STS $0000, r25;W 33 0000
STS $0000, r17;W 29 0000
STS $0000, r18;W DE 0000
STS $0000, r28;W 3E 0000
STS $0000, r30;W BC 0000


;PREPROCESS TestLD

; do a few simple LDs from X register
LDI r27, HIGH($0004); set X register to 0x0004
LDI r26, LOW($0004);
LD r0, X;R EC 0004
STS $0000, r0;W EC 0000
LD r8, X;R EC 0004
STS $0000, r8;W EC 0000
LD r31, X;R EC 0004
STS $0000, r31;W EC 0000
; load with pre decrement through 0x0000
LD r7, -X;R 3C 0003
LD r13, -X;R D9 0002
LD r22, -X;R 3C 0001
LD r1, -X;R A9 0000
LD r15, -X;R 94 FFFF
LD r23, -X;R 1A FFFE
LD r28, -X;R B0 FFFD
LD r4, -X;R 71 FFFC
STS $0000, r7;W 3C 0000
STS $0000, r13;W D9 0000
STS $0000, r22;W 3C 0000
STS $0000, r1;W A9 0000
STS $0000, r15;W 94 0000
STS $0000, r23;W 1A 0000
STS $0000, r28;W B0 0000
STS $0000, r4;W 71 0000
; load with post increment through 0xFFFF
LD r24, X+;R 2B FFFC
LD r18, X+;R 18 FFFD
LD r29, X+;R 67 FFFE
LD r20, X+;R 94 FFFF
LD r17, X+;R 1C 0000
LD r21, X+;R 42 0001
LD r13, X+;R 0B 0002
LD r3, X+;R 6D 0003
STS $0000, r24;W 2B 0000
STS $0000, r18;W 18 0000
STS $0000, r29;W 67 0000
STS $0000, r20;W 94 0000
STS $0000, r17;W 1C 0000
STS $0000, r21;W 42 0000
STS $0000, r13;W 0B 0000
STS $0000, r3;W 6D 0000
; do a few simple LDs from Y register
LDI r29, HIGH($0004); set Y register to 0x0004
LDI r28, LOW($0004);
LD r0, Y;R EC 0004
STS $0000, r0;W EC 0000
LD r8, Y;R EC 0004
STS $0000, r8;W EC 0000
LD r31, Y;R EC 0004
STS $0000, r31;W EC 0000
; load with pre decrement through 0x0000
LD r0, -Y;R 83 0003
LD r3, -Y;R 44 0002
LD r21, -Y;R E7 0001
LD r2, -Y;R 00 0000
LD r12, -Y;R 0F FFFF
LD r14, -Y;R 9E FFFE
LD r22, -Y;R B4 FFFD
LD r23, -Y;R 9C FFFC
STS $0000, r0;W 83 0000
STS $0000, r3;W 44 0000
STS $0000, r21;W E7 0000
STS $0000, r2;W 00 0000
STS $0000, r12;W 0F 0000
STS $0000, r14;W 9E 0000
STS $0000, r22;W B4 0000
STS $0000, r23;W 9C 0000
; load with post increment through 0xFFFF
LD r25, Y+;R 3C FFFC
LD r13, Y+;R 8C FFFD
LD r17, Y+;R 60 FFFE
LD r14, Y+;R 11 FFFF
LD r19, Y+;R 7A 0000
LD r2, Y+;R F6 0001
LD r4, Y+;R 73 0002
LD r5, Y+;R 3D 0003
STS $0000, r25;W 3C 0000
STS $0000, r13;W 8C 0000
STS $0000, r17;W 60 0000
STS $0000, r14;W 11 0000
STS $0000, r19;W 7A 0000
STS $0000, r2;W F6 0000
STS $0000, r4;W 73 0000
STS $0000, r5;W 3D 0000
; do a few simple LDs from Z register
LDI r31, HIGH($0004); set Z register to 0x0004
LDI r30, LOW($0004);
LD r0, Z;R EC 0004
STS $0000, r0;W EC 0000
LD r8, Z;R EC 0004
STS $0000, r8;W EC 0000
LD r31, Z;R EC 0004
STS $0000, r31;W EC 0000
; load with pre decrement through 0x0000
LD r26, -Z;R 76 0003
LD r13, -Z;R C1 0002
LD r0, -Z;R 62 0001
LD r18, -Z;R FF 0000
LD r15, -Z;R 53 FFFF
LD r12, -Z;R C2 FFFE
LD r2, -Z;R D3 FFFD
LD r6, -Z;R C5 FFFC
STS $0000, r26;W 76 0000
STS $0000, r13;W C1 0000
STS $0000, r0;W 62 0000
STS $0000, r18;W FF 0000
STS $0000, r15;W 53 0000
STS $0000, r12;W C2 0000
STS $0000, r2;W D3 0000
STS $0000, r6;W C5 0000
; load with post increment through 0xFFFF
LD r26, Z+;R 5C FFFC
LD r6, Z+;R DE FFFD
LD r1, Z+;R 26 FFFE
LD r25, Z+;R A1 FFFF
LD r8, Z+;R A3 0000
LD r0, Z+;R 9E 0001
LD r21, Z+;R C7 0002
LD r9, Z+;R 85 0003
STS $0000, r26;W 5C 0000
STS $0000, r6;W DE 0000
STS $0000, r1;W 26 0000
STS $0000, r25;W A1 0000
STS $0000, r8;W A3 0000
STS $0000, r0;W 9E 0000
STS $0000, r21;W C7 0000
STS $0000, r9;W 85 0000


;PREPROCESS TestLDD

LDI r29, HIGH($FFE0); set Y register to 0xFFE0
LDI r28, LOW($FFE0);
LDD r19, Y+0;R 63 FFE0
LDD r16, Y+40;R F5 0008
LDD r31, Y+4;R 81 FFE4
LDD r24, Y+25;R 77 FFF9
LDD r26, Y+35;R 36 0003
LDD r1, Y+30;R 15 FFFE
LDD r11, Y+22;R 36 FFF6
LDD r6, Y+63;R 4B 001F
STS $0000, r19;W 63 0000
STS $0000, r16;W F5 0000
STS $0000, r31;W 81 0000
STS $0000, r24;W 77 0000
STS $0000, r26;W 36 0000
STS $0000, r1;W 15 0000
STS $0000, r11;W 36 0000
STS $0000, r6;W 4B 0000
LDI r31, HIGH($FFE0); set Z register to 0xFFE0
LDI r30, LOW($FFE0);
LDD r5, Z+0;R 9D FFE0
LDD r20, Z+43;R C0 000B
LDD r15, Z+55;R 3A 0017
LDD r0, Z+44;R 7D 000C
LDD r2, Z+26;R 9A FFFA
LDD r20, Z+45;R FE 000D
LDD r11, Z+55;R A8 0017
LDD r12, Z+63;R F8 001F
STS $0000, r5;W 9D 0000
STS $0000, r20;W C0 0000
STS $0000, r15;W 3A 0000
STS $0000, r0;W 7D 0000
STS $0000, r2;W 9A 0000
STS $0000, r20;W FE 0000
STS $0000, r11;W A8 0000
STS $0000, r12;W F8 0000


;PREPROCESS TestLDS

; do a few simple LDSs
LDS r0, $0000;R EC 0000
STS $0000, r0;W EC 0000
LDS r15, $FF00;R EC FF00
STS $0000, r15;W EC 0000
LDS r30, $FFFF;R EC FFFF
STS $0000, r30;W EC 0000
; do some random LDSs
LDS r7, $AB4E;R 01 AB4E
LDS r27, $AC72;R 9B AC72
LDS r15, $BE5A;R BD BE5A
LDS r29, $3A2A;R C3 3A2A
LDS r23, $C618;R DE C618
LDS r19, $8D16;R CE 8D16
LDS r0, $25F5;R 83 25F5
LDS r9, $248C;R DC 248C
LDS r16, $0490;R 0B 0490
LDS r1, $A8A0;R B4 A8A0
STS $0000, r7;W 01 0000
STS $0000, r27;W 9B 0000
STS $0000, r15;W BD 0000
STS $0000, r29;W C3 0000
STS $0000, r23;W DE 0000
STS $0000, r19;W CE 0000
STS $0000, r0;W 83 0000
STS $0000, r9;W DC 0000
STS $0000, r16;W 0B 0000
STS $0000, r1;W B4 0000


;PREPROCESS TestMOV

; do a few simple MOVs
LDS r0, $0000;R EF 0000
MOV r0, r1;
STS $0000, r1;W EF 0000
LDS r31, $0000;R A5 0000
MOV r31, r30;
STS $0000, r30;W A5 0000
; do a random move through all registers
LDS r10, $0000;R A5 0000
MOV r10, r22;
MOV r22, r31;
MOV r31, r14;
MOV r14, r6;
MOV r6, r8;
MOV r8, r16;
MOV r16, r17;
MOV r17, r26;
MOV r26, r4;
MOV r4, r28;
MOV r28, r2;
MOV r2, r15;
MOV r15, r21;
MOV r21, r12;
MOV r12, r27;
MOV r27, r29;
MOV r29, r9;
MOV r9, r19;
MOV r19, r25;
MOV r25, r24;
MOV r24, r20;
MOV r20, r7;
MOV r7, r23;
MOV r23, r3;
MOV r3, r5;
MOV r5, r13;
MOV r13, r0;
MOV r0, r1;
MOV r1, r30;
MOV r30, r11;
MOV r11, r18;
STS $0000, r18;W A5 0000


;PREPROCESS TestST

LDI r27, HIGH($0004); set X register to 0x0004
LDI r26, LOW($0004);
LDS r0, $0000;R EC 0000
ST X, r0;W EC 0004
LDS r8, $0000;R EC 0000
ST X, r8;W EC 0004
LDS r31, $0000;R EC 0000
ST X, r31;W EC 0004
; store with pre decrement through 0x0000
LDS r12, $0000;R F7 0000
LDS r25, $0000;R BD 0000
LDS r1, $0000;R FF 0000
LDS r9, $0000;R A4 0000
LDS r6, $0000;R F6 0000
LDS r20, $0000;R 4C 0000
LDS r30, $0000;R 85 0000
LDS r14, $0000;R 5A 0000
ST -X, r12;W F7 0003
ST -X, r25;W BD 0002
ST -X, r1;W FF 0001
ST -X, r9;W A4 0000
ST -X, r6;W F6 FFFF
ST -X, r20;W 4C FFFE
ST -X, r30;W 85 FFFD
ST -X, r14;W 5A FFFC
; store with post increment through 0xFFFF
LDS r6, $0000;R 26 0000
LDS r23, $0000;R 6A 0000
LDS r14, $0000;R 0D 0000
LDS r3, $0000;R 7F 0000
LDS r24, $0000;R 0F 0000
LDS r4, $0000;R 8E 0000
LDS r13, $0000;R DC 0000
LDS r0, $0000;R A4 0000
ST X+, r6;W 26 FFFC
ST X+, r23;W 6A FFFD
ST X+, r14;W 0D FFFE
ST X+, r3;W 7F FFFF
ST X+, r24;W 0F 0000
ST X+, r4;W 8E 0001
ST X+, r13;W DC 0002
ST X+, r0;W A4 0003
LDI r29, HIGH($0004); set Y register to 0x0004
LDI r28, LOW($0004);
LDS r0, $0000;R EC 0000
ST Y, r0;W EC 0004
LDS r8, $0000;R EC 0000
ST Y, r8;W EC 0004
LDS r31, $0000;R EC 0000
ST Y, r31;W EC 0004
; store with pre decrement through 0x0000
LDS r3, $0000;R D6 0000
LDS r5, $0000;R C4 0000
LDS r15, $0000;R 6B 0000
LDS r24, $0000;R FF 0000
LDS r10, $0000;R 68 0000
LDS r13, $0000;R A9 0000
LDS r14, $0000;R E9 0000
LDS r2, $0000;R 22 0000
ST -Y, r3;W D6 0003
ST -Y, r5;W C4 0002
ST -Y, r15;W 6B 0001
ST -Y, r24;W FF 0000
ST -Y, r10;W 68 FFFF
ST -Y, r13;W A9 FFFE
ST -Y, r14;W E9 FFFD
ST -Y, r2;W 22 FFFC
; store with post increment through 0xFFFF
LDS r1, $0000;R 2D 0000
LDS r19, $0000;R 2F 0000
LDS r3, $0000;R FD 0000
LDS r25, $0000;R 84 0000
LDS r15, $0000;R 4D 0000
LDS r7, $0000;R 29 0000
LDS r17, $0000;R 19 0000
LDS r12, $0000;R 09 0000
ST Y+, r1;W 2D FFFC
ST Y+, r19;W 2F FFFD
ST Y+, r3;W FD FFFE
ST Y+, r25;W 84 FFFF
ST Y+, r15;W 4D 0000
ST Y+, r7;W 29 0001
ST Y+, r17;W 19 0002
ST Y+, r12;W 09 0003
LDI r31, HIGH($0004); set Z register to 0x0004
LDI r30, LOW($0004);
LDS r0, $0000;R EC 0000
ST Z, r0;W EC 0004
LDS r8, $0000;R EC 0000
ST Z, r8;W EC 0004
LDS r31, $0000;R EC 0000
ST Z, r31;W EC 0004
; store with pre decrement through 0x0000
LDS r23, $0000;R 89 0000
LDS r18, $0000;R 1E 0000
LDS r6, $0000;R 50 0000
LDS r27, $0000;R 94 0000
LDS r9, $0000;R D5 0000
LDS r11, $0000;R 95 0000
LDS r22, $0000;R A7 0000
LDS r3, $0000;R 6B 0000
ST -Z, r23;W 89 0003
ST -Z, r18;W 1E 0002
ST -Z, r6;W 50 0001
ST -Z, r27;W 94 0000
ST -Z, r9;W D5 FFFF
ST -Z, r11;W 95 FFFE
ST -Z, r22;W A7 FFFD
ST -Z, r3;W 6B FFFC
; store with post increment through 0xFFFF
LDS r14, $0000;R B9 0000
LDS r18, $0000;R 1B 0000
LDS r0, $0000;R 74 0000
LDS r1, $0000;R 4C 0000
LDS r28, $0000;R 1C 0000
LDS r16, $0000;R DA 0000
LDS r5, $0000;R 34 0000
LDS r12, $0000;R A1 0000
ST Z+, r14;W B9 FFFC
ST Z+, r18;W 1B FFFD
ST Z+, r0;W 74 FFFE
ST Z+, r1;W 4C FFFF
ST Z+, r28;W 1C 0000
ST Z+, r16;W DA 0001
ST Z+, r5;W 34 0002
ST Z+, r12;W A1 0003


;PREPROCESS TestSTD

LDI r29, HIGH($FFE0); set Y register to 0xFFE0
LDI r28, LOW($FFE0);
LDS r4, $0000;R EF 0000
LDS r12, $0000;R 4B 0000
LDS r23, $0000;R 4B 0000
LDS r11, $0000;R E7 0000
LDS r21, $0000;R 32 0000
LDS r23, $0000;R B8 0000
LDS r3, $0000;R 85 0000
LDS r9, $0000;R EA 0000
STD Y+0, r4;W EF FFE0
STD Y+7, r12;W 4B FFE7
STD Y+7, r23;W 4B FFE7
STD Y+19, r11;W E7 FFF3
STD Y+1, r21;W 32 FFE1
STD Y+54, r23;W B8 0016
STD Y+3, r3;W 85 FFE3
STD Y+63, r9;W EA 001F
LDI r31, HIGH($FFE0); set Z register to 0xFFE0
LDI r30, LOW($FFE0);
LDS r18, $0000;R DE 0000
LDS r22, $0000;R 08 0000
LDS r24, $0000;R 7D 0000
LDS r27, $0000;R BE 0000
LDS r21, $0000;R EE 0000
LDS r8, $0000;R 17 0000
LDS r4, $0000;R 55 0000
LDS r2, $0000;R 39 0000
STD Z+0, r18;W DE FFE0
STD Z+53, r22;W 08 0015
STD Z+17, r24;W 7D FFF1
STD Z+47, r27;W BE 000F
STD Z+25, r21;W EE FFF9
STD Z+49, r8;W 17 0011
STD Z+1, r4;W 55 FFE1
STD Z+63, r2;W 39 001F


;PREPROCESS TestSTS

; do a few simple STSs
LDS r0, $0000;R EC 0000
STS $0000, r0;W EC 0000
LDS r15, $0000;R EC 0000
STS $FF00, r15;W EC FF00
LDS r30, $0000;R EC 0000
STS $FFFF, r30;W EC FFFF
; do some random STSs
LDS r26, $0000;R CA 0000
LDS r18, $0000;R 9D 0000
LDS r27, $0000;R FB 0000
LDS r30, $0000;R B2 0000
LDS r28, $0000;R 68 0000
LDS r4, $0000;R DA 0000
LDS r16, $0000;R EE 0000
LDS r22, $0000;R 57 0000
LDS r19, $0000;R 36 0000
LDS r21, $0000;R 96 0000
STS $EA6F, r26;W CA EA6F
STS $6367, r18;W 9D 6367
STS $8216, r27;W FB 8216
STS $5409, r30;W B2 5409
STS $5209, r28;W 68 5209
STS $1093, r4;W DA 1093
STS $A376, r16;W EE A376
STS $9410, r22;W 57 9410
STS $C3F0, r19;W 36 C3F0
STS $F84C, r21;W 96 F84C
;PREPROCESS TestPOP
;PREPROCESS TestPOP
; load some random values into registers
LDS r29, $0000;R 7D 0000
LDS r12, $0000;R 45 0000
LDS r6, $0000;R 9A 0000
LDS r23, $0000;R CC 0000
LDS r13, $0000;R D0 0000
LDS r27, $0000;R E4 0000
LDS r2, $0000;R 4F 0000
LDS r24, $0000;R 6F 0000
LDS r16, $0000;R 60 0000
LDS r30, $0000;R 55 0000
LDS r26, $0000;R 9F 0000
LDS r11, $0000;R E6 0000
LDS r22, $0000;R 19 0000
LDS r17, $0000;R 8B 0000
LDS r15, $0000;R B0 0000
LDS r9, $0000;R BA 0000
LDS r3, $0000;R F6 0000
LDS r18, $0000;R A1 0000
LDS r1, $0000;R 48 0000
LDS r14, $0000;R 4A 0000
LDS r19, $0000;R 85 0000
LDS r8, $0000;R C8 0000
LDS r25, $0000;R 4D 0000
LDS r28, $0000;R 22 0000
LDS r0, $0000;R 27 0000
LDS r31, $0000;R 13 0000
LDS r20, $0000;R 30 0000
LDS r10, $0000;R 6A 0000
LDS r4, $0000;R 53 0000
LDS r7, $0000;R 4B 0000
LDS r21, $0000;R 44 0000
LDS r5, $0000;R 36 0000
; push all the registers
PUSH r29;W 7D 0000
PUSH r12;W 45 FFFF
PUSH r6;W 9A FFFE
PUSH r23;W CC FFFD
PUSH r13;W D0 FFFC
PUSH r27;W E4 FFFB
PUSH r2;W 4F FFFA
PUSH r24;W 6F FFF9
PUSH r16;W 60 FFF8
PUSH r30;W 55 FFF7
PUSH r26;W 9F FFF6
PUSH r11;W E6 FFF5
PUSH r22;W 19 FFF4
PUSH r17;W 8B FFF3
PUSH r15;W B0 FFF2
PUSH r9;W BA FFF1
PUSH r3;W F6 FFF0
PUSH r18;W A1 FFEF
PUSH r1;W 48 FFEE
PUSH r14;W 4A FFED
PUSH r19;W 85 FFEC
PUSH r8;W C8 FFEB
PUSH r25;W 4D FFEA
PUSH r28;W 22 FFE9
PUSH r0;W 27 FFE8
PUSH r31;W 13 FFE7
PUSH r20;W 30 FFE6
PUSH r10;W 6A FFE5
PUSH r4;W 53 FFE4
PUSH r7;W 4B FFE3
PUSH r21;W 44 FFE2
PUSH r5;W 36 FFE1
; pop all the registers
POP r5;R 36 FFE1
POP r21;R 44 FFE2
POP r7;R 4B FFE3
POP r4;R 53 FFE4
POP r10;R 6A FFE5
POP r20;R 30 FFE6
POP r31;R 13 FFE7
POP r0;R 27 FFE8
POP r28;R 22 FFE9
POP r25;R 4D FFEA
POP r8;R C8 FFEB
POP r19;R 85 FFEC
POP r14;R 4A FFED
POP r1;R 48 FFEE
POP r18;R A1 FFEF
POP r3;R F6 FFF0
POP r9;R BA FFF1
POP r15;R B0 FFF2
POP r17;R 8B FFF3
POP r22;R 19 FFF4
POP r11;R E6 FFF5
POP r26;R 9F FFF6
POP r30;R 55 FFF7
POP r16;R 60 FFF8
POP r24;R 6F FFF9
POP r2;R 4F FFFA
POP r27;R E4 FFFB
POP r13;R D0 FFFC
POP r23;R CC FFFD
POP r6;R 9A FFFE
POP r12;R 45 FFFF
POP r29;R 7D 0000
; check all the values are unchanged
STS $0000, r29;W 7D 0000
STS $0000, r12;W 45 0000
STS $0000, r6;W 9A 0000
STS $0000, r23;W CC 0000
STS $0000, r13;W D0 0000
STS $0000, r27;W E4 0000
STS $0000, r2;W 4F 0000
STS $0000, r24;W 6F 0000
STS $0000, r16;W 60 0000
STS $0000, r30;W 55 0000
STS $0000, r26;W 9F 0000
STS $0000, r11;W E6 0000
STS $0000, r22;W 19 0000
STS $0000, r17;W 8B 0000
STS $0000, r15;W B0 0000
STS $0000, r9;W BA 0000
STS $0000, r3;W F6 0000
STS $0000, r18;W A1 0000
STS $0000, r1;W 48 0000
STS $0000, r14;W 4A 0000
STS $0000, r19;W 85 0000
STS $0000, r8;W C8 0000
STS $0000, r25;W 4D 0000
STS $0000, r28;W 22 0000
STS $0000, r0;W 27 0000
STS $0000, r31;W 13 0000
STS $0000, r20;W 30 0000
STS $0000, r10;W 6A 0000
STS $0000, r4;W 53 0000
STS $0000, r7;W 4B 0000
STS $0000, r21;W 44 0000
STS $0000, r5;W 36 0000