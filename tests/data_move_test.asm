; Tests the data movement instructions

; Note, we attempt to verify the behavior of the load instructions
; by writing registers out with STS-
; the load tests assume STS is functional.



;PREPROCESS TestLDI
; do a few simple LDIs
LDI r16, $00;
STS $0000, r16;W 00 0000
LDI r17, $FF;
STS $0000, r17;W FF 0000
LDI r18, $0F;
STS $0000, r18;W 0F 0000
; do a fixed LDI into all 16 upper registers
LDI r16, $EC;
LDI r17, $EC;
LDI r18, $EC;
LDI r19, $EC;
LDI r20, $EC;
LDI r21, $EC;
LDI r22, $EC;
LDI r23, $EC;
LDI r24, $EC;
LDI r25, $EC;
LDI r26, $EC;
LDI r27, $EC;
LDI r28, $EC;
LDI r29, $EC;
LDI r30, $EC;
LDI r31, $EC;
STS $0000, r16;W EC 0000
STS $0000, r17;W EC 0000
STS $0000, r18;W EC 0000
STS $0000, r19;W EC 0000
STS $0000, r20;W EC 0000
STS $0000, r21;W EC 0000
STS $0000, r22;W EC 0000
STS $0000, r23;W EC 0000
STS $0000, r24;W EC 0000
STS $0000, r25;W EC 0000
STS $0000, r26;W EC 0000
STS $0000, r27;W EC 0000
STS $0000, r28;W EC 0000
STS $0000, r29;W EC 0000
STS $0000, r30;W EC 0000
STS $0000, r31;W EC 0000
; do some random LDIs
LDI r22, $CD;
LDI r27, $12;
LDI r16, $66;
LDI r31, $C1;
LDI r29, $23;
LDI r24, $B9;
LDI r28, $66;
LDI r26, $7E;
LDI r25, $8D;
LDI r21, $A3;
STS $0000, r22;W CD 0000
STS $0000, r27;W 12 0000
STS $0000, r16;W 66 0000
STS $0000, r31;W C1 0000
STS $0000, r29;W 23 0000
STS $0000, r24;W B9 0000
STS $0000, r28;W 66 0000
STS $0000, r26;W 7E 0000
STS $0000, r25;W 8D 0000
STS $0000, r21;W A3 0000


;PREPROCESS TestLD

; do a few simple LDs from X register
LDI r27, HIGH($0004); set X register to 0x0004
LDI r26, LOW($0004);
LD r0, X;R EC 0004
STS $0000, r0;W EC 0000
LD r8, X;R EC 0004
STS $0000, r8;W EC 0000
LD r31, X;R EC 0004
STS $0000, r31;W EC 0000
; load with pre decrement through 0x0000
LD r22, -X;R FC 0003
LD r2, -X;R 7E 0002
LD r24, -X;R 2E 0001
LD r29, -X;R 33 0000
LD r23, -X;R 84 FFFF
LD r28, -X;R DE FFFE
LD r20, -X;R D4 FFFD
LD r9, -X;R 32 FFFC
STS $0000, r22;W FC 0000
STS $0000, r2;W 7E 0000
STS $0000, r24;W 2E 0000
STS $0000, r29;W 33 0000
STS $0000, r23;W 84 0000
STS $0000, r28;W DE 0000
STS $0000, r20;W D4 0000
STS $0000, r9;W 32 0000
; load with post increment through 0xFFFF
LD r2, X+;R 10 FFFC
LD r20, X+;R 8C FFFD
LD r1, X+;R 67 FFFE
LD r8, X+;R B9 FFFF
LD r9, X+;R 3E 0000
LD r12, X+;R CA 0001
LD r10, X+;R DA 0002
LD r11, X+;R B9 0003
STS $0000, r2;W 10 0000
STS $0000, r20;W 8C 0000
STS $0000, r1;W 67 0000
STS $0000, r8;W B9 0000
STS $0000, r9;W 3E 0000
STS $0000, r12;W CA 0000
STS $0000, r10;W DA 0000
STS $0000, r11;W B9 0000
; do a few simple LDs from Y register
LDI r29, HIGH($0004); set Y register to 0x0004
LDI r28, LOW($0004);
LD r0, Y;R EC 0004
STS $0000, r0;W EC 0000
LD r8, Y;R EC 0004
STS $0000, r8;W EC 0000
LD r31, Y;R EC 0004
STS $0000, r31;W EC 0000
; load with pre decrement through 0x0000
LD r2, -Y;R E5 0003
LD r14, -Y;R 8C 0002
LD r0, -Y;R 7C 0001
LD r23, -Y;R 39 0000
LD r20, -Y;R 82 FFFF
LD r9, -Y;R 5C FFFE
LD r4, -Y;R 7F FFFD
LD r1, -Y;R F1 FFFC
STS $0000, r2;W E5 0000
STS $0000, r14;W 8C 0000
STS $0000, r0;W 7C 0000
STS $0000, r23;W 39 0000
STS $0000, r20;W 82 0000
STS $0000, r9;W 5C 0000
STS $0000, r4;W 7F 0000
STS $0000, r1;W F1 0000
; load with post increment through 0xFFFF
LD r15, Y+;R A6 FFFC
LD r1, Y+;R 0F FFFD
LD r20, Y+;R D0 FFFE
LD r27, Y+;R 16 FFFF
LD r26, Y+;R 7C 0000
LD r12, Y+;R 99 0001
LD r17, Y+;R B3 0002
LD r19, Y+;R F2 0003
STS $0000, r15;W A6 0000
STS $0000, r1;W 0F 0000
STS $0000, r20;W D0 0000
STS $0000, r27;W 16 0000
STS $0000, r26;W 7C 0000
STS $0000, r12;W 99 0000
STS $0000, r17;W B3 0000
STS $0000, r19;W F2 0000
; do a few simple LDs from Z register
LDI r31, HIGH($0004); set Z register to 0x0004
LDI r30, LOW($0004);
LD r0, Z;R EC 0004
STS $0000, r0;W EC 0000
LD r8, Z;R EC 0004
STS $0000, r8;W EC 0000
LD r31, Z;R EC 0004
STS $0000, r31;W EC 0000
; load with pre decrement through 0x0000
LD r5, -Z;R 1E 0003
LD r27, -Z;R E3 0002
LD r1, -Z;R 52 0001
LD r26, -Z;R F8 0000
LD r8, -Z;R 55 FFFF
LD r23, -Z;R 44 FFFE
LD r15, -Z;R 7C FFFD
LD r29, -Z;R 65 FFFC
STS $0000, r5;W 1E 0000
STS $0000, r27;W E3 0000
STS $0000, r1;W 52 0000
STS $0000, r26;W F8 0000
STS $0000, r8;W 55 0000
STS $0000, r23;W 44 0000
STS $0000, r15;W 7C 0000
STS $0000, r29;W 65 0000
; load with post increment through 0xFFFF
LD r2, Z+;R 4D FFFC
LD r10, Z+;R 73 FFFD
LD r21, Z+;R 4D FFFE
LD r6, Z+;R 22 FFFF
LD r4, Z+;R D5 0000
LD r29, Z+;R 13 0001
LD r8, Z+;R 2F 0002
LD r19, Z+;R 3F 0003
STS $0000, r2;W 4D 0000
STS $0000, r10;W 73 0000
STS $0000, r21;W 4D 0000
STS $0000, r6;W 22 0000
STS $0000, r4;W D5 0000
STS $0000, r29;W 13 0000
STS $0000, r8;W 2F 0000
STS $0000, r19;W 3F 0000


;PREPROCESS TestLDD

LDI r29, HIGH($FFE0); set Y register to 0xFFE0
LDI r28, LOW($FFE0);
LDD r10, Y+0;R 24 FFE0
LDD r1, Y+15;R CD FFEF
LDD r11, Y+54;R EE 0016
LDD r25, Y+35;R 38 0003
LDD r2, Y+24;R 19 FFF8
LDD r21, Y+28;R 0B FFFC
LDD r5, Y+63;R 22 001F
LDD r19, Y+63;R 9F 001F
STS $0000, r10;W 24 0000
STS $0000, r1;W CD 0000
STS $0000, r11;W EE 0000
STS $0000, r25;W 38 0000
STS $0000, r2;W 19 0000
STS $0000, r21;W 0B 0000
STS $0000, r5;W 22 0000
STS $0000, r19;W 9F 0000
LDI r31, HIGH($FFE0); set Z register to 0xFFE0
LDI r30, LOW($FFE0);
LDD r18, Z+0;R 3E FFE0
LDD r5, Z+44;R AF 000C
LDD r16, Z+48;R 00 0010
LDD r29, Z+29;R E1 FFFD
LDD r3, Z+16;R 78 FFF0
LDD r19, Z+8;R 6F FFE8
LDD r19, Z+39;R A7 0007
LDD r7, Z+63;R B4 001F
STS $0000, r18;W 3E 0000
STS $0000, r5;W AF 0000
STS $0000, r16;W 00 0000
STS $0000, r29;W E1 0000
STS $0000, r3;W 78 0000
STS $0000, r19;W 6F 0000
STS $0000, r19;W A7 0000
STS $0000, r7;W B4 0000


;PREPROCESS TestLDS

; do a few simple LDSs
LDS r0, $0000;R EC 0000
STS $0000, r0;W EC 0000
LDS r15, $FF00;R EC FF00
STS $0000, r15;W EC 0000
LDS r30, $FFFF;R EC FFFF
STS $0000, r30;W EC 0000
; do some random LDSs
LDS r16, $A2A8;R 83 A2A8
LDS r1, $848B;R E3 848B
LDS r20, $F3BE;R 23 F3BE
LDS r22, $6F3B;R E3 6F3B
LDS r9, $E449;R 88 E449
LDS r14, $8959;R 1E 8959
LDS r2, $AB8D;R C9 AB8D
LDS r28, $ECB2;R 20 ECB2
LDS r13, $B8A6;R 25 B8A6
LDS r21, $270F;R B8 270F
STS $0000, r16;W 83 0000
STS $0000, r1;W E3 0000
STS $0000, r20;W 23 0000
STS $0000, r22;W E3 0000
STS $0000, r9;W 88 0000
STS $0000, r14;W 1E 0000
STS $0000, r2;W C9 0000
STS $0000, r28;W 20 0000
STS $0000, r13;W 25 0000
STS $0000, r21;W B8 0000


;PREPROCESS TestMOV

; do a few simple MOVs
LDS r0, $0000;R 00 0000
MOV r0, r1;
STS $0000, r1;W 00 0000
LDS r31, $0000;R 12 0000
MOV r31, r30;
STS $0000, r30;W 12 0000
; do a random move through all registers
LDS r9, $0000;R F8 0000
MOV r9, r4;
MOV r4, r17;
MOV r17, r2;
MOV r2, r19;
MOV r19, r10;
MOV r10, r22;
MOV r22, r11;
MOV r11, r5;
MOV r5, r18;
MOV r18, r30;
MOV r30, r0;
MOV r0, r16;
MOV r16, r20;
MOV r20, r14;
MOV r14, r15;
MOV r15, r27;
MOV r27, r28;
MOV r28, r1;
MOV r1, r12;
MOV r12, r25;
MOV r25, r13;
MOV r13, r3;
MOV r3, r24;
MOV r24, r23;
MOV r23, r26;
MOV r26, r7;
MOV r7, r8;
MOV r8, r31;
MOV r31, r21;
MOV r21, r29;
MOV r29, r6;
STS $0000, r6;W F8 0000


;PREPROCESS TestST

LDI r27, HIGH($0004); set X register to 0x0004
LDI r26, LOW($0004);
LDS r0, $0000;R EC 0000
ST X, r0;W EC 0004
LDS r8, $0000;R EC 0000
ST X, r8;W EC 0004
LDS r31, $0000;R EC 0000
ST X, r31;W EC 0004
; store with pre decrement through 0x0000
LDS r0, $0000;R F3 0000
LDS r10, $0000;R 4E 0000
LDS r5, $0000;R 84 0000
LDS r13, $0000;R E6 0000
LDS r8, $0000;R 6A 0000
LDS r2, $0000;R 86 0000
LDS r29, $0000;R 4C 0000
LDS r4, $0000;R 29 0000
ST -X, r0;W F3 0003
ST -X, r10;W 4E 0002
ST -X, r5;W 84 0001
ST -X, r13;W E6 0000
ST -X, r8;W 6A FFFF
ST -X, r2;W 86 FFFE
ST -X, r29;W 4C FFFD
ST -X, r4;W 29 FFFC
; store with post increment through 0xFFFF
LDS r16, $0000;R CA 0000
LDS r21, $0000;R 6F 0000
LDS r1, $0000;R E7 0000
LDS r0, $0000;R 8A 0000
LDS r12, $0000;R 5D 0000
LDS r29, $0000;R C8 0000
LDS r13, $0000;R 90 0000
LDS r11, $0000;R BE 0000
ST X+, r16;W CA FFFC
ST X+, r21;W 6F FFFD
ST X+, r1;W E7 FFFE
ST X+, r0;W 8A FFFF
ST X+, r12;W 5D 0000
ST X+, r29;W C8 0001
ST X+, r13;W 90 0002
ST X+, r11;W BE 0003
LDI r29, HIGH($0004); set Y register to 0x0004
LDI r28, LOW($0004);
LDS r0, $0000;R EC 0000
ST Y, r0;W EC 0004
LDS r8, $0000;R EC 0000
ST Y, r8;W EC 0004
LDS r31, $0000;R EC 0000
ST Y, r31;W EC 0004
; store with pre decrement through 0x0000
LDS r22, $0000;R B1 0000
LDS r25, $0000;R C3 0000
LDS r14, $0000;R DA 0000
LDS r7, $0000;R E9 0000
LDS r13, $0000;R 2B 0000
LDS r27, $0000;R E9 0000
LDS r11, $0000;R 2C 0000
LDS r0, $0000;R FC 0000
ST -Y, r22;W B1 0003
ST -Y, r25;W C3 0002
ST -Y, r14;W DA 0001
ST -Y, r7;W E9 0000
ST -Y, r13;W 2B FFFF
ST -Y, r27;W E9 FFFE
ST -Y, r11;W 2C FFFD
ST -Y, r0;W FC FFFC
; store with post increment through 0xFFFF
LDS r25, $0000;R 13 0000
LDS r4, $0000;R E0 0000
LDS r0, $0000;R 5E 0000
LDS r6, $0000;R 7E 0000
LDS r20, $0000;R E2 0000
LDS r15, $0000;R 44 0000
LDS r22, $0000;R 12 0000
LDS r13, $0000;R F2 0000
ST Y+, r25;W 13 FFFC
ST Y+, r4;W E0 FFFD
ST Y+, r0;W 5E FFFE
ST Y+, r6;W 7E FFFF
ST Y+, r20;W E2 0000
ST Y+, r15;W 44 0001
ST Y+, r22;W 12 0002
ST Y+, r13;W F2 0003
LDI r31, HIGH($0004); set Z register to 0x0004
LDI r30, LOW($0004);
LDS r0, $0000;R EC 0000
ST Z, r0;W EC 0004
LDS r8, $0000;R EC 0000
ST Z, r8;W EC 0004
LDS r31, $0000;R EC 0000
ST Z, r31;W EC 0004
; store with pre decrement through 0x0000
LDS r15, $0000;R 6E 0000
LDS r4, $0000;R A2 0000
LDS r26, $0000;R BB 0000
LDS r0, $0000;R F9 0000
LDS r2, $0000;R 91 0000
LDS r16, $0000;R FD 0000
LDS r1, $0000;R D0 0000
LDS r17, $0000;R 1E 0000
ST -Z, r15;W 6E 0003
ST -Z, r4;W A2 0002
ST -Z, r26;W BB 0001
ST -Z, r0;W F9 0000
ST -Z, r2;W 91 FFFF
ST -Z, r16;W FD FFFE
ST -Z, r1;W D0 FFFD
ST -Z, r17;W 1E FFFC
; store with post increment through 0xFFFF
LDS r17, $0000;R AD 0000
LDS r14, $0000;R 95 0000
LDS r7, $0000;R 39 0000
LDS r20, $0000;R E5 0000
LDS r3, $0000;R 61 0000
LDS r4, $0000;R 88 0000
LDS r18, $0000;R 2B 0000
LDS r29, $0000;R 9D 0000
ST Z+, r17;W AD FFFC
ST Z+, r14;W 95 FFFD
ST Z+, r7;W 39 FFFE
ST Z+, r20;W E5 FFFF
ST Z+, r3;W 61 0000
ST Z+, r4;W 88 0001
ST Z+, r18;W 2B 0002
ST Z+, r29;W 9D 0003


;PREPROCESS TestSTD

LDI r29, HIGH($FFE0); set Y register to 0xFFE0
LDI r28, LOW($FFE0);
LDS r30, $0000;R 78 0000
LDS r7, $0000;R EA 0000
LDS r27, $0000;R 63 0000
LDS r2, $0000;R 5F 0000
LDS r22, $0000;R A4 0000
LDS r17, $0000;R 3D 0000
LDS r26, $0000;R 47 0000
LDS r11, $0000;R 1D 0000
STD Y+0, r30;W 78 FFE0
STD Y+13, r7;W EA FFED
STD Y+1, r27;W 63 FFE1
STD Y+42, r2;W 5F 000A
STD Y+3, r22;W A4 FFE3
STD Y+48, r17;W 3D 0010
STD Y+21, r26;W 47 FFF5
STD Y+63, r11;W 1D 001F
LDI r31, HIGH($FFE0); set Z register to 0xFFE0
LDI r30, LOW($FFE0);
LDS r1, $0000;R 06 0000
LDS r5, $0000;R 51 0000
LDS r18, $0000;R 7A 0000
LDS r19, $0000;R 9F 0000
LDS r3, $0000;R 4B 0000
LDS r18, $0000;R D4 0000
LDS r0, $0000;R F7 0000
LDS r2, $0000;R 38 0000
STD Z+0, r1;W 06 FFE0
STD Z+57, r5;W 51 0019
STD Z+49, r18;W 7A 0011
STD Z+2, r19;W 9F FFE2
STD Z+56, r3;W 4B 0018
STD Z+49, r18;W D4 0011
STD Z+16, r0;W F7 FFF0
STD Z+63, r2;W 38 001F


;PREPROCESS TestSTS

; do a few simple STSs
LDS r0, $0000;R EC 0000
STS $0000, r0;W EC 0000
LDS r15, $0000;R EC 0000
STS $FF00, r15;W EC FF00
LDS r30, $0000;R EC 0000
STS $FFFF, r30;W EC FFFF
; do some random STSs
LDS r3, $0000;R 2B 0000
LDS r11, $0000;R 19 0000
LDS r22, $0000;R 97 0000
LDS r24, $0000;R F8 0000
LDS r17, $0000;R 6A 0000
LDS r8, $0000;R 78 0000
LDS r25, $0000;R 36 0000
LDS r30, $0000;R A2 0000
LDS r4, $0000;R 08 0000
LDS r14, $0000;R 03 0000
STS $F39A, r3;W 2B F39A
STS $1B3A, r11;W 19 1B3A
STS $D1D3, r22;W 97 D1D3
STS $F6C5, r24;W F8 F6C5
STS $9C80, r17;W 6A 9C80
STS $A253, r8;W 78 A253
STS $9A97, r25;W 36 9A97
STS $2B89, r30;W A2 2B89
STS $F584, r4;W 08 F584
STS $D7FF, r14;W 03 D7FF
;PREPROCESS TestPOP
;PREPROCESS TestPOP
; load some random values into registers
LDS r17, $0000;R A6 0000
LDS r26, $0000;R F4 0000
LDS r27, $0000;R 55 0000
LDS r12, $0000;R 45 0000
LDS r20, $0000;R 86 0000
LDS r9, $0000;R B4 0000
LDS r1, $0000;R B2 0000
LDS r0, $0000;R E3 0000
LDS r7, $0000;R 0B 0000
LDS r18, $0000;R 54 0000
LDS r10, $0000;R 06 0000
LDS r30, $0000;R 0B 0000
LDS r6, $0000;R BB 0000
LDS r15, $0000;R AB 0000
LDS r29, $0000;R BB 0000
LDS r2, $0000;R BF 0000
LDS r25, $0000;R 90 0000
LDS r16, $0000;R DF 0000
LDS r28, $0000;R A1 0000
LDS r3, $0000;R 4A 0000
LDS r19, $0000;R BC 0000
LDS r23, $0000;R CE 0000
LDS r31, $0000;R 4B 0000
LDS r8, $0000;R 56 0000
LDS r11, $0000;R B9 0000
LDS r21, $0000;R A1 0000
LDS r24, $0000;R CA 0000
LDS r5, $0000;R 93 0000
LDS r14, $0000;R 75 0000
LDS r13, $0000;R FD 0000
LDS r22, $0000;R 07 0000
LDS r4, $0000;R 44 0000
; push all the registers
PUSH r17;W A6 0000
PUSH r26;W F4 FFFF
PUSH r27;W 55 FFFE
PUSH r12;W 45 FFFD
PUSH r20;W 86 FFFC
PUSH r9;W B4 FFFB
PUSH r1;W B2 FFFA
PUSH r0;W E3 FFF9
PUSH r7;W 0B FFF8
PUSH r18;W 54 FFF7
PUSH r10;W 06 FFF6
PUSH r30;W 0B FFF5
PUSH r6;W BB FFF4
PUSH r15;W AB FFF3
PUSH r29;W BB FFF2
PUSH r2;W BF FFF1
PUSH r25;W 90 FFF0
PUSH r16;W DF FFEF
PUSH r28;W A1 FFEE
PUSH r3;W 4A FFED
PUSH r19;W BC FFEC
PUSH r23;W CE FFEB
PUSH r31;W 4B FFEA
PUSH r8;W 56 FFE9
PUSH r11;W B9 FFE8
PUSH r21;W A1 FFE7
PUSH r24;W CA FFE6
PUSH r5;W 93 FFE5
PUSH r14;W 75 FFE4
PUSH r13;W FD FFE3
PUSH r22;W 07 FFE2
PUSH r4;W 44 FFE1
; pop all the registers
POP r17;R A6 FFE1
POP r26;R F4 FFE2
POP r27;R 55 FFE3
POP r12;R 45 FFE4
POP r20;R 86 FFE5
POP r9;R B4 FFE6
POP r1;R B2 FFE7
POP r0;R E3 FFE8
POP r7;R 0B FFE9
POP r18;R 54 FFEA
POP r10;R 06 FFEB
POP r30;R 0B FFEC
POP r6;R BB FFED
POP r15;R AB FFEE
POP r29;R BB FFEF
POP r2;R BF FFF0
POP r25;R 90 FFF1
POP r16;R DF FFF2
POP r28;R A1 FFF3
POP r3;R 4A FFF4
POP r19;R BC FFF5
POP r23;R CE FFF6
POP r31;R 4B FFF7
POP r8;R 56 FFF8
POP r11;R B9 FFF9
POP r21;R A1 FFFA
POP r24;R CA FFFB
POP r5;R 93 FFFC
POP r14;R 75 FFFD
POP r13;R FD FFFE
POP r22;R 07 FFFF
POP r4;R 44 0000
; check all the values are unchanged
STS $0000, r17;W A6 0000
STS $0000, r26;W F4 0000
STS $0000, r27;W 55 0000
STS $0000, r12;W 45 0000
STS $0000, r20;W 86 0000
STS $0000, r9;W B4 0000
STS $0000, r1;W B2 0000
STS $0000, r0;W E3 0000
STS $0000, r7;W 0B 0000
STS $0000, r18;W 54 0000
STS $0000, r10;W 06 0000
STS $0000, r30;W 0B 0000
STS $0000, r6;W BB 0000
STS $0000, r15;W AB 0000
STS $0000, r29;W BB 0000
STS $0000, r2;W BF 0000
STS $0000, r25;W 90 0000
STS $0000, r16;W DF 0000
STS $0000, r28;W A1 0000
STS $0000, r3;W 4A 0000
STS $0000, r19;W BC 0000
STS $0000, r23;W CE 0000
STS $0000, r31;W 4B 0000
STS $0000, r8;W 56 0000
STS $0000, r11;W B9 0000
STS $0000, r21;W A1 0000
STS $0000, r24;W CA 0000
STS $0000, r5;W 93 0000
STS $0000, r14;W 75 0000
STS $0000, r13;W FD 0000
STS $0000, r22;W 07 0000
STS $0000, r4;W 44 0000